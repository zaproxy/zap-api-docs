openapi: "3.0.2"
info:
  title: ZAP API
  description: The HTTP API for controlling and accessing ZAP.
  contact:
    name: OWASP ZAP User Group
    url: https://groups.google.com/group/zaproxy-users
    email: zaproxy-users@googlegroups.com
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: Dev Build
servers:
  - url: http://zap
    description: The URL while proxying through ZAP.
  - url: http://{address}:{port}
    description: The URL of a Local Proxy of ZAP.
    variables:
      address:
        default: 127.0.0.1
        description: The address ZAP is listening on.
      port:
        default: '8080'
        description: The port ZAP is bound to.
components:
  securitySchemes:
    apiKeyHeader:
      type: apiKey
      name: X-ZAP-API-Key
      in: header
    apiKeyQuery:
      type: apiKey
      name: apikey
      in: query
  schemas:
    Error:
      type: object
      required:
      - message
      - code
      properties:
        message:
          type: string
        code:
          type: integer
          minimum: 100
          maximum: 600
security:
  - apiKeyHeader: []
  - apiKeyQuery: []
paths:
  /JSON/alert/view/alert/:
    get:
      description: >-
        Gets the alert with the given ID, the corresponding HTTP message can be obtained with the 'messageId' field and 'message' API method
      operationId: alertViewAlert
      tags:
        - alert
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: id
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: integer
  /JSON/alert/view/alerts/:
    get:
      description: >-
        Gets the alerts raised by ZAP, optionally filtering by URL or riskId, and paginating with 'start' position and 'count' of alerts
      operationId: alertViewAlerts
      tags:
        - alert
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: baseurl
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: string
      - name: start
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: integer
      - name: count
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: integer
      - name: riskId
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/alert/view/alertsSummary/:
    get:
      description: >-
        Gets number of alerts grouped by each risk level, optionally filtering by URL
      operationId: alertViewAlertsSummary
      tags:
        - alert
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: baseurl
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/alert/view/numberOfAlerts/:
    get:
      description: >-
        Gets the number of alerts, optionally filtering by URL or riskId
      operationId: alertViewNumberOfAlerts
      tags:
        - alert
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: baseurl
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: string
      - name: riskId
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/alert/view/alertsByRisk/:
    get:
      description: >-
        Gets a summary of the alerts, optionally filtered by a 'url'. If 'recurse' is true then all alerts that apply to urls that start with the specified 'url' will be returned, otherwise only those on exactly the same 'url' (ignoring url parameters)
      operationId: alertViewAlertsByRisk
      tags:
        - alert
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: url
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: string
      - name: recurse
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: boolean
  /JSON/alert/view/alertCountsByRisk/:
    get:
      description: >-
        Gets a count of the alerts, optionally filtered as per alertsPerRisk
      operationId: alertViewAlertCountsByRisk
      tags:
        - alert
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: url
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: string
      - name: recurse
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: boolean
  /JSON/alert/action/deleteAllAlerts/:
    get:
      description: >-
        Deletes all alerts of the current session.
      operationId: alertActionDeleteAllAlerts
      tags:
        - alert
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/alert/action/deleteAlert/:
    get:
      description: >-
        Deletes the alert with the given ID. 
      operationId: alertActionDeleteAlert
      tags:
        - alert
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: id
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: integer
  /JSON/acsrf/view/optionTokensNames/:
    get:
      description: >-
        Lists the names of all anti-CSRF tokens
      operationId: acsrfViewOptionTokensNames
      tags:
        - acsrf
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/acsrf/action/addOptionToken/:
    get:
      description: >-
        Adds an anti-CSRF token with the given name, enabled by default
      operationId: acsrfActionAddOptionToken
      tags:
        - acsrf
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: String
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/acsrf/action/removeOptionToken/:
    get:
      description: >-
        Removes the anti-CSRF token with the given name
      operationId: acsrfActionRemoveOptionToken
      tags:
        - acsrf
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: String
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /OTHER/acsrf/other/genForm/:
    get:
      description: >-
        Generate a form for testing lack of anti-CSRF tokens - typically invoked via ZAP
      operationId: acsrfOtherGenForm
      tags:
        - acsrf
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: hrefId
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: integer
  /JSON/pscan/view/scanOnlyInScope/:
    get:
      description: >-
        Tells whether or not the passive scan should be performed only on messages that are in scope.
      operationId: pscanViewScanOnlyInScope
      tags:
        - pscan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/pscan/view/recordsToScan/:
    get:
      description: >-
        The number of records the passive scanner still has to scan
      operationId: pscanViewRecordsToScan
      tags:
        - pscan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/pscan/view/scanners/:
    get:
      description: >-
        Lists all passive scanners with its ID, name, enabled state and alert threshold.
      operationId: pscanViewScanners
      tags:
        - pscan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/pscan/view/currentRule/:
    get:
      description: >-
        Show information about the passive scan rule currently being run (if any).
      operationId: pscanViewCurrentRule
      tags:
        - pscan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/pscan/view/maxAlertsPerRule/:
    get:
      description: >-
        Gets the maximum number of alerts a passive scan rule should raise.
      operationId: pscanViewMaxAlertsPerRule
      tags:
        - pscan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/pscan/action/setEnabled/:
    get:
      description: >-
        Sets whether or not the passive scanning is enabled (Note: the enabled state is not persisted).
      operationId: pscanActionSetEnabled
      tags:
        - pscan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: enabled
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: boolean
  /JSON/pscan/action/setScanOnlyInScope/:
    get:
      description: >-
        Sets whether or not the passive scan should be performed only on messages that are in scope.
      operationId: pscanActionSetScanOnlyInScope
      tags:
        - pscan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: onlyInScope
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: boolean
  /JSON/pscan/action/enableAllScanners/:
    get:
      description: >-
        Enables all passive scanners
      operationId: pscanActionEnableAllScanners
      tags:
        - pscan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/pscan/action/disableAllScanners/:
    get:
      description: >-
        Disables all passive scanners
      operationId: pscanActionDisableAllScanners
      tags:
        - pscan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/pscan/action/enableScanners/:
    get:
      description: >-
        Enables all passive scanners with the given IDs (comma separated list of IDs)
      operationId: pscanActionEnableScanners
      tags:
        - pscan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: ids
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: integer
  /JSON/pscan/action/disableScanners/:
    get:
      description: >-
        Disables all passive scanners with the given IDs (comma separated list of IDs)
      operationId: pscanActionDisableScanners
      tags:
        - pscan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: ids
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: integer
  /JSON/pscan/action/setScannerAlertThreshold/:
    get:
      description: >-
        Sets the alert threshold of the passive scanner with the given ID, accepted values for alert threshold: OFF, DEFAULT, LOW, MEDIUM and HIGH
      operationId: pscanActionSetScannerAlertThreshold
      tags:
        - pscan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: id
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: integer
      - name: alertThreshold
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/pscan/action/setMaxAlertsPerRule/:
    get:
      description: >-
        Sets the maximum number of alerts a passive scan rule should raise.
      operationId: pscanActionSetMaxAlertsPerRule
      tags:
        - pscan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: maxAlerts
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: integer
  /JSON/search/view/urlsByUrlRegex/:
    get:
      description: >-
        Returns the URLs of the HTTP messages that match the given regular expression in the URL optionally filtered by URL and paginated with 'start' position and 'count' of messages.
      operationId: searchViewUrlsByUrlRegex
      tags:
        - search
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: regex
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
      - name: baseurl
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: string
      - name: start
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: integer
      - name: count
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: integer
  /JSON/search/view/urlsByRequestRegex/:
    get:
      description: >-
        Returns the URLs of the HTTP messages that match the given regular expression in the request optionally filtered by URL and paginated with 'start' position and 'count' of messages.
      operationId: searchViewUrlsByRequestRegex
      tags:
        - search
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: regex
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
      - name: baseurl
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: string
      - name: start
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: integer
      - name: count
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: integer
  /JSON/search/view/urlsByResponseRegex/:
    get:
      description: >-
        Returns the URLs of the HTTP messages that match the given regular expression in the response optionally filtered by URL and paginated with 'start' position and 'count' of messages.
      operationId: searchViewUrlsByResponseRegex
      tags:
        - search
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: regex
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
      - name: baseurl
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: string
      - name: start
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: integer
      - name: count
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: integer
  /JSON/search/view/urlsByHeaderRegex/:
    get:
      description: >-
        Returns the URLs of the HTTP messages that match the given regular expression in the header(s) optionally filtered by URL and paginated with 'start' position and 'count' of messages.
      operationId: searchViewUrlsByHeaderRegex
      tags:
        - search
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: regex
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
      - name: baseurl
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: string
      - name: start
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: integer
      - name: count
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: integer
  /JSON/search/view/messagesByUrlRegex/:
    get:
      description: >-
        Returns the HTTP messages that match the given regular expression in the URL optionally filtered by URL and paginated with 'start' position and 'count' of messages.
      operationId: searchViewMessagesByUrlRegex
      tags:
        - search
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: regex
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
      - name: baseurl
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: string
      - name: start
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: integer
      - name: count
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: integer
  /JSON/search/view/messagesByRequestRegex/:
    get:
      description: >-
        Returns the HTTP messages that match the given regular expression in the request optionally filtered by URL and paginated with 'start' position and 'count' of messages.
      operationId: searchViewMessagesByRequestRegex
      tags:
        - search
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: regex
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
      - name: baseurl
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: string
      - name: start
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: integer
      - name: count
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: integer
  /JSON/search/view/messagesByResponseRegex/:
    get:
      description: >-
        Returns the HTTP messages that match the given regular expression in the response optionally filtered by URL and paginated with 'start' position and 'count' of messages.
      operationId: searchViewMessagesByResponseRegex
      tags:
        - search
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: regex
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
      - name: baseurl
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: string
      - name: start
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: integer
      - name: count
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: integer
  /JSON/search/view/messagesByHeaderRegex/:
    get:
      description: >-
        Returns the HTTP messages that match the given regular expression in the header(s) optionally filtered by URL and paginated with 'start' position and 'count' of messages.
      operationId: searchViewMessagesByHeaderRegex
      tags:
        - search
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: regex
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
      - name: baseurl
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: string
      - name: start
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: integer
      - name: count
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: integer
  /OTHER/search/other/harByUrlRegex/:
    get:
      description: >-
        Returns the HTTP messages, in HAR format, that match the given regular expression in the URL optionally filtered by URL and paginated with 'start' position and 'count' of messages.
      operationId: searchOtherHarByUrlRegex
      tags:
        - search
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: regex
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
      - name: baseurl
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: string
      - name: start
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: integer
      - name: count
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: integer
  /OTHER/search/other/harByRequestRegex/:
    get:
      description: >-
        Returns the HTTP messages, in HAR format, that match the given regular expression in the request optionally filtered by URL and paginated with 'start' position and 'count' of messages.
      operationId: searchOtherHarByRequestRegex
      tags:
        - search
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: regex
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
      - name: baseurl
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: string
      - name: start
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: integer
      - name: count
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: integer
  /OTHER/search/other/harByResponseRegex/:
    get:
      description: >-
        Returns the HTTP messages, in HAR format, that match the given regular expression in the response optionally filtered by URL and paginated with 'start' position and 'count' of messages.
      operationId: searchOtherHarByResponseRegex
      tags:
        - search
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: regex
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
      - name: baseurl
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: string
      - name: start
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: integer
      - name: count
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: integer
  /OTHER/search/other/harByHeaderRegex/:
    get:
      description: >-
        Returns the HTTP messages, in HAR format, that match the given regular expression in the header(s) optionally filtered by URL and paginated with 'start' position and 'count' of messages.
      operationId: searchOtherHarByHeaderRegex
      tags:
        - search
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: regex
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
      - name: baseurl
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: string
      - name: start
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: integer
      - name: count
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: integer
  /JSON/autoupdate/view/latestVersionNumber/:
    get:
      description: >-
        Returns the latest version number
      operationId: autoupdateViewLatestVersionNumber
      tags:
        - autoupdate
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/autoupdate/view/isLatestVersion/:
    get:
      description: >-
        Returns 'true' if ZAP is on the latest version
      operationId: autoupdateViewIsLatestVersion
      tags:
        - autoupdate
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/autoupdate/view/installedAddons/:
    get:
      description: >-
        Return a list of all of the installed add-ons
      operationId: autoupdateViewInstalledAddons
      tags:
        - autoupdate
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/autoupdate/view/localAddons/:
    get:
      description: >-
        Returns a list with all local add-ons, installed or not.
      operationId: autoupdateViewLocalAddons
      tags:
        - autoupdate
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/autoupdate/view/newAddons/:
    get:
      description: >-
        Return a list of any add-ons that have been added to the Marketplace since the last check for updates
      operationId: autoupdateViewNewAddons
      tags:
        - autoupdate
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/autoupdate/view/updatedAddons/:
    get:
      description: >-
        Return a list of any add-ons that have been changed in the Marketplace since the last check for updates
      operationId: autoupdateViewUpdatedAddons
      tags:
        - autoupdate
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/autoupdate/view/marketplaceAddons/:
    get:
      description: >-
        Return a list of all of the add-ons on the ZAP Marketplace (this information is read once and then cached)
      operationId: autoupdateViewMarketplaceAddons
      tags:
        - autoupdate
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/autoupdate/view/optionAddonDirectories/:
    get:
      description: >-
        
      operationId: autoupdateViewOptionAddonDirectories
      tags:
        - autoupdate
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/autoupdate/view/optionDayLastChecked/:
    get:
      description: >-
        
      operationId: autoupdateViewOptionDayLastChecked
      tags:
        - autoupdate
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/autoupdate/view/optionDayLastInstallWarned/:
    get:
      description: >-
        
      operationId: autoupdateViewOptionDayLastInstallWarned
      tags:
        - autoupdate
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/autoupdate/view/optionDayLastUpdateWarned/:
    get:
      description: >-
        
      operationId: autoupdateViewOptionDayLastUpdateWarned
      tags:
        - autoupdate
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/autoupdate/view/optionDownloadDirectory/:
    get:
      description: >-
        
      operationId: autoupdateViewOptionDownloadDirectory
      tags:
        - autoupdate
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/autoupdate/view/optionCheckAddonUpdates/:
    get:
      description: >-
        
      operationId: autoupdateViewOptionCheckAddonUpdates
      tags:
        - autoupdate
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/autoupdate/view/optionCheckOnStart/:
    get:
      description: >-
        
      operationId: autoupdateViewOptionCheckOnStart
      tags:
        - autoupdate
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/autoupdate/view/optionDownloadNewRelease/:
    get:
      description: >-
        
      operationId: autoupdateViewOptionDownloadNewRelease
      tags:
        - autoupdate
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/autoupdate/view/optionInstallAddonUpdates/:
    get:
      description: >-
        
      operationId: autoupdateViewOptionInstallAddonUpdates
      tags:
        - autoupdate
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/autoupdate/view/optionInstallScannerRules/:
    get:
      description: >-
        
      operationId: autoupdateViewOptionInstallScannerRules
      tags:
        - autoupdate
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/autoupdate/view/optionReportAlphaAddons/:
    get:
      description: >-
        
      operationId: autoupdateViewOptionReportAlphaAddons
      tags:
        - autoupdate
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/autoupdate/view/optionReportBetaAddons/:
    get:
      description: >-
        
      operationId: autoupdateViewOptionReportBetaAddons
      tags:
        - autoupdate
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/autoupdate/view/optionReportReleaseAddons/:
    get:
      description: >-
        
      operationId: autoupdateViewOptionReportReleaseAddons
      tags:
        - autoupdate
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/autoupdate/action/downloadLatestRelease/:
    get:
      description: >-
        Downloads the latest release, if any 
      operationId: autoupdateActionDownloadLatestRelease
      tags:
        - autoupdate
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/autoupdate/action/installAddon/:
    get:
      description: >-
        Installs or updates the specified add-on, returning when complete (ie not asynchronously)
      operationId: autoupdateActionInstallAddon
      tags:
        - autoupdate
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: id
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/autoupdate/action/installLocalAddon/:
    get:
      description: >-
        
      operationId: autoupdateActionInstallLocalAddon
      tags:
        - autoupdate
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: file
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/autoupdate/action/uninstallAddon/:
    get:
      description: >-
        Uninstalls the specified add-on 
      operationId: autoupdateActionUninstallAddon
      tags:
        - autoupdate
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: id
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/autoupdate/action/setOptionCheckAddonUpdates/:
    get:
      description: >-
        
      operationId: autoupdateActionSetOptionCheckAddonUpdates
      tags:
        - autoupdate
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: Boolean
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/autoupdate/action/setOptionCheckOnStart/:
    get:
      description: >-
        
      operationId: autoupdateActionSetOptionCheckOnStart
      tags:
        - autoupdate
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: Boolean
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/autoupdate/action/setOptionDownloadNewRelease/:
    get:
      description: >-
        
      operationId: autoupdateActionSetOptionDownloadNewRelease
      tags:
        - autoupdate
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: Boolean
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/autoupdate/action/setOptionInstallAddonUpdates/:
    get:
      description: >-
        
      operationId: autoupdateActionSetOptionInstallAddonUpdates
      tags:
        - autoupdate
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: Boolean
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/autoupdate/action/setOptionInstallScannerRules/:
    get:
      description: >-
        
      operationId: autoupdateActionSetOptionInstallScannerRules
      tags:
        - autoupdate
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: Boolean
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/autoupdate/action/setOptionReportAlphaAddons/:
    get:
      description: >-
        
      operationId: autoupdateActionSetOptionReportAlphaAddons
      tags:
        - autoupdate
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: Boolean
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/autoupdate/action/setOptionReportBetaAddons/:
    get:
      description: >-
        
      operationId: autoupdateActionSetOptionReportBetaAddons
      tags:
        - autoupdate
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: Boolean
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/autoupdate/action/setOptionReportReleaseAddons/:
    get:
      description: >-
        
      operationId: autoupdateActionSetOptionReportReleaseAddons
      tags:
        - autoupdate
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: Boolean
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/spider/view/status/:
    get:
      description: >-
        
      operationId: spiderViewStatus
      tags:
        - spider
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: scanId
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: integer
  /JSON/spider/view/results/:
    get:
      description: >-
        
      operationId: spiderViewResults
      tags:
        - spider
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: scanId
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: integer
  /JSON/spider/view/fullResults/:
    get:
      description: >-
        
      operationId: spiderViewFullResults
      tags:
        - spider
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: scanId
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: integer
  /JSON/spider/view/scans/:
    get:
      description: >-
        
      operationId: spiderViewScans
      tags:
        - spider
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/spider/view/excludedFromScan/:
    get:
      description: >-
        Gets the regexes of URLs excluded from the spider scans.
      operationId: spiderViewExcludedFromScan
      tags:
        - spider
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/spider/view/allUrls/:
    get:
      description: >-
        Returns a list of unique URLs from the history table based on HTTP messages added by the Spider.
      operationId: spiderViewAllUrls
      tags:
        - spider
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/spider/view/addedNodes/:
    get:
      description: >-
        Returns a list of the names of the nodes added to the Sites tree by the specified scan.
      operationId: spiderViewAddedNodes
      tags:
        - spider
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: scanId
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: integer
  /JSON/spider/view/domainsAlwaysInScope/:
    get:
      description: >-
        Gets all the domains that are always in scope. For each domain the following are shown: the index, the value (domain), if enabled, and if specified as a regex.
      operationId: spiderViewDomainsAlwaysInScope
      tags:
        - spider
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/spider/view/optionDomainsAlwaysInScope/:
    get:
      description: >-
        Use view domainsAlwaysInScope instead.
      deprecated: true
      operationId: spiderViewOptionDomainsAlwaysInScope
      tags:
        - spider
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/spider/view/optionDomainsAlwaysInScopeEnabled/:
    get:
      description: >-
        Use view domainsAlwaysInScope instead.
      deprecated: true
      operationId: spiderViewOptionDomainsAlwaysInScopeEnabled
      tags:
        - spider
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/spider/view/optionHandleParameters/:
    get:
      description: >-
        
      operationId: spiderViewOptionHandleParameters
      tags:
        - spider
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/spider/view/optionMaxChildren/:
    get:
      description: >-
        Gets the maximum number of child nodes (per node) that can be crawled, 0 means no limit.
      operationId: spiderViewOptionMaxChildren
      tags:
        - spider
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/spider/view/optionMaxDepth/:
    get:
      description: >-
        Gets the maximum depth the spider can crawl, 0 if unlimited.
      operationId: spiderViewOptionMaxDepth
      tags:
        - spider
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/spider/view/optionMaxDuration/:
    get:
      description: >-
        
      operationId: spiderViewOptionMaxDuration
      tags:
        - spider
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/spider/view/optionMaxParseSizeBytes/:
    get:
      description: >-
        Gets the maximum size, in bytes, that a response might have to be parsed.
      operationId: spiderViewOptionMaxParseSizeBytes
      tags:
        - spider
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/spider/view/optionMaxScansInUI/:
    get:
      description: >-
        
      operationId: spiderViewOptionMaxScansInUI
      tags:
        - spider
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/spider/view/optionRequestWaitTime/:
    get:
      description: >-
        
      operationId: spiderViewOptionRequestWaitTime
      tags:
        - spider
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/spider/view/optionScope/:
    get:
      description: >-
        
      operationId: spiderViewOptionScope
      tags:
        - spider
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/spider/view/optionScopeText/:
    get:
      description: >-
        
      operationId: spiderViewOptionScopeText
      tags:
        - spider
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/spider/view/optionSkipURLString/:
    get:
      description: >-
        
      operationId: spiderViewOptionSkipURLString
      tags:
        - spider
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/spider/view/optionThreadCount/:
    get:
      description: >-
        
      operationId: spiderViewOptionThreadCount
      tags:
        - spider
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/spider/view/optionUserAgent/:
    get:
      description: >-
        
      operationId: spiderViewOptionUserAgent
      tags:
        - spider
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/spider/view/optionAcceptCookies/:
    get:
      description: >-
        Gets whether or not a spider process should accept cookies while spidering.
      operationId: spiderViewOptionAcceptCookies
      tags:
        - spider
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/spider/view/optionHandleODataParametersVisited/:
    get:
      description: >-
        
      operationId: spiderViewOptionHandleODataParametersVisited
      tags:
        - spider
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/spider/view/optionParseComments/:
    get:
      description: >-
        
      operationId: spiderViewOptionParseComments
      tags:
        - spider
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/spider/view/optionParseGit/:
    get:
      description: >-
        
      operationId: spiderViewOptionParseGit
      tags:
        - spider
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/spider/view/optionParseRobotsTxt/:
    get:
      description: >-
        
      operationId: spiderViewOptionParseRobotsTxt
      tags:
        - spider
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/spider/view/optionParseSVNEntries/:
    get:
      description: >-
        
      operationId: spiderViewOptionParseSVNEntries
      tags:
        - spider
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/spider/view/optionParseSitemapXml/:
    get:
      description: >-
        
      operationId: spiderViewOptionParseSitemapXml
      tags:
        - spider
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/spider/view/optionPostForm/:
    get:
      description: >-
        
      operationId: spiderViewOptionPostForm
      tags:
        - spider
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/spider/view/optionProcessForm/:
    get:
      description: >-
        
      operationId: spiderViewOptionProcessForm
      tags:
        - spider
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/spider/view/optionSendRefererHeader/:
    get:
      description: >-
        Gets whether or not the 'Referer' header should be sent while spidering.
      operationId: spiderViewOptionSendRefererHeader
      tags:
        - spider
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/spider/view/optionShowAdvancedDialog/:
    get:
      description: >-
        
      operationId: spiderViewOptionShowAdvancedDialog
      tags:
        - spider
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/spider/action/scan/:
    get:
      description: >-
        Runs the spider against the given URL (or context). Optionally, the 'maxChildren' parameter can be set to limit the number of children scanned, the 'recurse' parameter can be used to prevent the spider from seeding recursively, the parameter 'contextName' can be used to constrain the scan to a Context and the parameter 'subtreeOnly' allows to restrict the spider under a site's subtree (using the specified 'url').
      operationId: spiderActionScan
      tags:
        - spider
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: url
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: string
      - name: maxChildren
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: integer
      - name: recurse
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: boolean
      - name: contextName
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: string
      - name: subtreeOnly
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: boolean
  /JSON/spider/action/scanAsUser/:
    get:
      description: >-
        Runs the spider from the perspective of a User, obtained using the given Context ID and User ID. See 'scan' action for more details.
      operationId: spiderActionScanAsUser
      tags:
        - spider
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: contextId
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: integer
      - name: userId
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: integer
      - name: url
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: string
      - name: maxChildren
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: integer
      - name: recurse
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: boolean
      - name: subtreeOnly
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: boolean
  /JSON/spider/action/pause/:
    get:
      description: >-
        
      operationId: spiderActionPause
      tags:
        - spider
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: scanId
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: integer
  /JSON/spider/action/resume/:
    get:
      description: >-
        
      operationId: spiderActionResume
      tags:
        - spider
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: scanId
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: integer
  /JSON/spider/action/stop/:
    get:
      description: >-
        
      operationId: spiderActionStop
      tags:
        - spider
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: scanId
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: integer
  /JSON/spider/action/removeScan/:
    get:
      description: >-
        
      operationId: spiderActionRemoveScan
      tags:
        - spider
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: scanId
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: integer
  /JSON/spider/action/pauseAllScans/:
    get:
      description: >-
        
      operationId: spiderActionPauseAllScans
      tags:
        - spider
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/spider/action/resumeAllScans/:
    get:
      description: >-
        
      operationId: spiderActionResumeAllScans
      tags:
        - spider
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/spider/action/stopAllScans/:
    get:
      description: >-
        
      operationId: spiderActionStopAllScans
      tags:
        - spider
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/spider/action/removeAllScans/:
    get:
      description: >-
        
      operationId: spiderActionRemoveAllScans
      tags:
        - spider
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/spider/action/clearExcludedFromScan/:
    get:
      description: >-
        Clears the regexes of URLs excluded from the spider scans.
      operationId: spiderActionClearExcludedFromScan
      tags:
        - spider
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/spider/action/excludeFromScan/:
    get:
      description: >-
        Adds a regex of URLs that should be excluded from the spider scans.
      operationId: spiderActionExcludeFromScan
      tags:
        - spider
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: regex
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/spider/action/addDomainAlwaysInScope/:
    get:
      description: >-
        Adds a new domain that's always in scope, using the specified value. Optionally sets if the new entry is enabled (default, true) and whether or not the new value is specified as a regex (default, false).
      operationId: spiderActionAddDomainAlwaysInScope
      tags:
        - spider
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: value
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
      - name: isRegex
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: boolean
      - name: isEnabled
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: boolean
  /JSON/spider/action/modifyDomainAlwaysInScope/:
    get:
      description: >-
        Modifies a domain that's always in scope. Allows to modify the value, if enabled or if a regex. The domain is selected with its index, which can be obtained with the view domainsAlwaysInScope.
      operationId: spiderActionModifyDomainAlwaysInScope
      tags:
        - spider
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: idx
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: integer
      - name: value
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: string
      - name: isRegex
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: boolean
      - name: isEnabled
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: boolean
  /JSON/spider/action/removeDomainAlwaysInScope/:
    get:
      description: >-
        Removes a domain that's always in scope, with the given index. The index can be obtained with the view domainsAlwaysInScope.
      operationId: spiderActionRemoveDomainAlwaysInScope
      tags:
        - spider
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: idx
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: integer
  /JSON/spider/action/enableAllDomainsAlwaysInScope/:
    get:
      description: >-
        Enables all domains that are always in scope.
      operationId: spiderActionEnableAllDomainsAlwaysInScope
      tags:
        - spider
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/spider/action/disableAllDomainsAlwaysInScope/:
    get:
      description: >-
        Disables all domains that are always in scope.
      operationId: spiderActionDisableAllDomainsAlwaysInScope
      tags:
        - spider
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/spider/action/setOptionHandleParameters/:
    get:
      description: >-
        
      operationId: spiderActionSetOptionHandleParameters
      tags:
        - spider
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: String
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/spider/action/setOptionScopeString/:
    get:
      description: >-
        Use actions [add|modify|remove]DomainAlwaysInScope instead.
      operationId: spiderActionSetOptionScopeString
      tags:
        - spider
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: String
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/spider/action/setOptionSkipURLString/:
    get:
      description: >-
        
      operationId: spiderActionSetOptionSkipURLString
      tags:
        - spider
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: String
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/spider/action/setOptionUserAgent/:
    get:
      description: >-
        
      operationId: spiderActionSetOptionUserAgent
      tags:
        - spider
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: String
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/spider/action/setOptionAcceptCookies/:
    get:
      description: >-
        Sets whether or not a spider process should accept cookies while spidering.
      operationId: spiderActionSetOptionAcceptCookies
      tags:
        - spider
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: Boolean
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/spider/action/setOptionHandleODataParametersVisited/:
    get:
      description: >-
        
      operationId: spiderActionSetOptionHandleODataParametersVisited
      tags:
        - spider
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: Boolean
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/spider/action/setOptionMaxChildren/:
    get:
      description: >-
        Sets the maximum number of child nodes (per node) that can be crawled, 0 means no limit.
      operationId: spiderActionSetOptionMaxChildren
      tags:
        - spider
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: Integer
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: integer
  /JSON/spider/action/setOptionMaxDepth/:
    get:
      description: >-
        Sets the maximum depth the spider can crawl, 0 for unlimited depth.
      operationId: spiderActionSetOptionMaxDepth
      tags:
        - spider
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: Integer
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: integer
  /JSON/spider/action/setOptionMaxDuration/:
    get:
      description: >-
        
      operationId: spiderActionSetOptionMaxDuration
      tags:
        - spider
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: Integer
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: integer
  /JSON/spider/action/setOptionMaxParseSizeBytes/:
    get:
      description: >-
        Sets the maximum size, in bytes, that a response might have to be parsed. This allows the spider to skip big responses/files.
      operationId: spiderActionSetOptionMaxParseSizeBytes
      tags:
        - spider
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: Integer
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: integer
  /JSON/spider/action/setOptionMaxScansInUI/:
    get:
      description: >-
        
      operationId: spiderActionSetOptionMaxScansInUI
      tags:
        - spider
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: Integer
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: integer
  /JSON/spider/action/setOptionParseComments/:
    get:
      description: >-
        
      operationId: spiderActionSetOptionParseComments
      tags:
        - spider
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: Boolean
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/spider/action/setOptionParseGit/:
    get:
      description: >-
        
      operationId: spiderActionSetOptionParseGit
      tags:
        - spider
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: Boolean
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/spider/action/setOptionParseRobotsTxt/:
    get:
      description: >-
        
      operationId: spiderActionSetOptionParseRobotsTxt
      tags:
        - spider
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: Boolean
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/spider/action/setOptionParseSVNEntries/:
    get:
      description: >-
        
      operationId: spiderActionSetOptionParseSVNEntries
      tags:
        - spider
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: Boolean
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/spider/action/setOptionParseSitemapXml/:
    get:
      description: >-
        
      operationId: spiderActionSetOptionParseSitemapXml
      tags:
        - spider
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: Boolean
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/spider/action/setOptionPostForm/:
    get:
      description: >-
        
      operationId: spiderActionSetOptionPostForm
      tags:
        - spider
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: Boolean
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/spider/action/setOptionProcessForm/:
    get:
      description: >-
        
      operationId: spiderActionSetOptionProcessForm
      tags:
        - spider
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: Boolean
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/spider/action/setOptionRequestWaitTime/:
    get:
      description: >-
        
      operationId: spiderActionSetOptionRequestWaitTime
      tags:
        - spider
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: Integer
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: integer
  /JSON/spider/action/setOptionSendRefererHeader/:
    get:
      description: >-
        Sets whether or not the 'Referer' header should be sent while spidering.
      operationId: spiderActionSetOptionSendRefererHeader
      tags:
        - spider
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: Boolean
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/spider/action/setOptionShowAdvancedDialog/:
    get:
      description: >-
        
      operationId: spiderActionSetOptionShowAdvancedDialog
      tags:
        - spider
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: Boolean
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/spider/action/setOptionThreadCount/:
    get:
      description: >-
        
      operationId: spiderActionSetOptionThreadCount
      tags:
        - spider
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: Integer
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: integer
  /JSON/core/view/hosts/:
    get:
      description: >-
        Gets the name of the hosts accessed through/by ZAP
      operationId: coreViewHosts
      tags:
        - core
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/core/view/sites/:
    get:
      description: >-
        Gets the sites accessed through/by ZAP (scheme and domain)
      operationId: coreViewSites
      tags:
        - core
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/core/view/urls/:
    get:
      description: >-
        Gets the URLs accessed through/by ZAP, optionally filtering by (base) URL.
      operationId: coreViewUrls
      tags:
        - core
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: baseurl
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/core/view/childNodes/:
    get:
      description: >-
        Gets the child nodes underneath the specified URL in the Sites tree
      operationId: coreViewChildNodes
      tags:
        - core
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: url
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/core/view/message/:
    get:
      description: >-
        Gets the HTTP message with the given ID. Returns the ID, request/response headers and bodies, cookies, note, type, RTT, and timestamp.
      operationId: coreViewMessage
      tags:
        - core
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: id
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: integer
  /JSON/core/view/messages/:
    get:
      description: >-
        Gets the HTTP messages sent by ZAP, request and response, optionally filtered by URL and paginated with 'start' position and 'count' of messages
      operationId: coreViewMessages
      tags:
        - core
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: baseurl
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: string
      - name: start
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: integer
      - name: count
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: integer
  /JSON/core/view/messagesById/:
    get:
      description: >-
        Gets the HTTP messages with the given IDs.
      operationId: coreViewMessagesById
      tags:
        - core
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: ids
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/core/view/numberOfMessages/:
    get:
      description: >-
        Gets the number of messages, optionally filtering by URL
      operationId: coreViewNumberOfMessages
      tags:
        - core
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: baseurl
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/core/view/mode/:
    get:
      description: >-
        Gets the mode
      operationId: coreViewMode
      tags:
        - core
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/core/view/version/:
    get:
      description: >-
        Gets ZAP version
      operationId: coreViewVersion
      tags:
        - core
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/core/view/excludedFromProxy/:
    get:
      description: >-
        Gets the regular expressions, applied to URLs, to exclude from the local proxies.
      operationId: coreViewExcludedFromProxy
      tags:
        - core
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/core/view/homeDirectory/:
    get:
      description: >-
        
      operationId: coreViewHomeDirectory
      tags:
        - core
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/core/view/sessionLocation/:
    get:
      description: >-
        Gets the location of the current session file
      operationId: coreViewSessionLocation
      tags:
        - core
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/core/view/proxyChainExcludedDomains/:
    get:
      description: >-
        Gets all the domains that are excluded from the outgoing proxy. For each domain the following are shown: the index, the value (domain), if enabled, and if specified as a regex.
      operationId: coreViewProxyChainExcludedDomains
      tags:
        - core
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/core/view/optionProxyChainSkipName/:
    get:
      description: >-
        Use view proxyChainExcludedDomains instead.
      deprecated: true
      operationId: coreViewOptionProxyChainSkipName
      tags:
        - core
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/core/view/optionProxyExcludedDomains/:
    get:
      description: >-
        Use view proxyChainExcludedDomains instead.
      deprecated: true
      operationId: coreViewOptionProxyExcludedDomains
      tags:
        - core
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/core/view/optionProxyExcludedDomainsEnabled/:
    get:
      description: >-
        Use view proxyChainExcludedDomains instead.
      deprecated: true
      operationId: coreViewOptionProxyExcludedDomainsEnabled
      tags:
        - core
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/core/view/zapHomePath/:
    get:
      description: >-
        Gets the path to ZAP's home directory.
      operationId: coreViewZapHomePath
      tags:
        - core
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/core/view/optionMaximumAlertInstances/:
    get:
      description: >-
        Gets the maximum number of alert instances to include in a report.
      operationId: coreViewOptionMaximumAlertInstances
      tags:
        - core
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/core/view/optionMergeRelatedAlerts/:
    get:
      description: >-
        Gets whether or not related alerts will be merged in any reports generated.
      operationId: coreViewOptionMergeRelatedAlerts
      tags:
        - core
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/core/view/optionAlertOverridesFilePath/:
    get:
      description: >-
        Gets the path to the file with alert overrides.
      operationId: coreViewOptionAlertOverridesFilePath
      tags:
        - core
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/core/view/alert/:
    get:
      description: >-
        Gets the alert with the given ID, the corresponding HTTP message can be obtained with the 'messageId' field and 'message' API method
      deprecated: true
      operationId: coreViewAlert
      tags:
        - core
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: id
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: integer
  /JSON/core/view/alerts/:
    get:
      description: >-
        Gets the alerts raised by ZAP, optionally filtering by URL or riskId, and paginating with 'start' position and 'count' of alerts
      deprecated: true
      operationId: coreViewAlerts
      tags:
        - core
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: baseurl
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: string
      - name: start
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: integer
      - name: count
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: integer
      - name: riskId
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/core/view/alertsSummary/:
    get:
      description: >-
        Gets number of alerts grouped by each risk level, optionally filtering by URL
      deprecated: true
      operationId: coreViewAlertsSummary
      tags:
        - core
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: baseurl
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/core/view/numberOfAlerts/:
    get:
      description: >-
        Gets the number of alerts, optionally filtering by URL or riskId
      deprecated: true
      operationId: coreViewNumberOfAlerts
      tags:
        - core
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: baseurl
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: string
      - name: riskId
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/core/view/optionDefaultUserAgent/:
    get:
      description: >-
        Gets the user agent that ZAP should use when creating HTTP messages (for example, spider messages or CONNECT requests to outgoing proxy).
      operationId: coreViewOptionDefaultUserAgent
      tags:
        - core
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/core/view/optionDnsTtlSuccessfulQueries/:
    get:
      description: >-
        Gets the TTL (in seconds) of successful DNS queries.
      operationId: coreViewOptionDnsTtlSuccessfulQueries
      tags:
        - core
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/core/view/optionHttpState/:
    get:
      description: >-
        
      operationId: coreViewOptionHttpState
      tags:
        - core
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/core/view/optionProxyChainName/:
    get:
      description: >-
        
      operationId: coreViewOptionProxyChainName
      tags:
        - core
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/core/view/optionProxyChainPassword/:
    get:
      description: >-
        
      operationId: coreViewOptionProxyChainPassword
      tags:
        - core
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/core/view/optionProxyChainPort/:
    get:
      description: >-
        
      operationId: coreViewOptionProxyChainPort
      tags:
        - core
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/core/view/optionProxyChainRealm/:
    get:
      description: >-
        
      operationId: coreViewOptionProxyChainRealm
      tags:
        - core
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/core/view/optionProxyChainUserName/:
    get:
      description: >-
        
      operationId: coreViewOptionProxyChainUserName
      tags:
        - core
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/core/view/optionTimeoutInSecs/:
    get:
      description: >-
        Gets the connection time out, in seconds.
      operationId: coreViewOptionTimeoutInSecs
      tags:
        - core
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/core/view/optionHttpStateEnabled/:
    get:
      description: >-
        
      operationId: coreViewOptionHttpStateEnabled
      tags:
        - core
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/core/view/optionProxyChainPrompt/:
    get:
      description: >-
        
      operationId: coreViewOptionProxyChainPrompt
      tags:
        - core
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/core/view/optionSingleCookieRequestHeader/:
    get:
      description: >-
        
      operationId: coreViewOptionSingleCookieRequestHeader
      tags:
        - core
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/core/view/optionUseProxyChain/:
    get:
      description: >-
        
      operationId: coreViewOptionUseProxyChain
      tags:
        - core
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/core/view/optionUseProxyChainAuth/:
    get:
      description: >-
        
      operationId: coreViewOptionUseProxyChainAuth
      tags:
        - core
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/core/action/accessUrl/:
    get:
      description: >-
        Convenient and simple action to access a URL, optionally following redirections. Returns the request sent and response received and followed redirections, if any. Other actions are available which offer more control on what is sent, like, 'sendRequest' or 'sendHarRequest'.
      operationId: coreActionAccessUrl
      tags:
        - core
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: url
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
      - name: followRedirects
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: boolean
  /JSON/core/action/shutdown/:
    get:
      description: >-
        Shuts down ZAP
      operationId: coreActionShutdown
      tags:
        - core
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/core/action/newSession/:
    get:
      description: >-
        Creates a new session, optionally overwriting existing files. If a relative path is specified it will be resolved against the "session" directory in ZAP "home" dir.
      operationId: coreActionNewSession
      tags:
        - core
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: name
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: string
      - name: overwrite
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: boolean
  /JSON/core/action/loadSession/:
    get:
      description: >-
        Loads the session with the given name. If a relative path is specified it will be resolved against the "session" directory in ZAP "home" dir.
      operationId: coreActionLoadSession
      tags:
        - core
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: name
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/core/action/saveSession/:
    get:
      description: >-
        Saves the session with the name supplied, optionally overwriting existing files. If a relative path is specified it will be resolved against the "session" directory in ZAP "home" dir.
      operationId: coreActionSaveSession
      tags:
        - core
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: name
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
      - name: overwrite
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: boolean
  /JSON/core/action/snapshotSession/:
    get:
      description: >-
        Snapshots the session, optionally with the given name, and overwriting existing files. If no name is specified the name of the current session with a timestamp appended is used. If a relative path is specified it will be resolved against the "session" directory in ZAP "home" dir.
      operationId: coreActionSnapshotSession
      tags:
        - core
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: name
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
      - name: overwrite
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: boolean
  /JSON/core/action/clearExcludedFromProxy/:
    get:
      description: >-
        Clears the regexes of URLs excluded from the local proxies.
      operationId: coreActionClearExcludedFromProxy
      tags:
        - core
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/core/action/excludeFromProxy/:
    get:
      description: >-
        Adds a regex of URLs that should be excluded from the local proxies.
      operationId: coreActionExcludeFromProxy
      tags:
        - core
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: regex
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/core/action/setHomeDirectory/:
    get:
      description: >-
        
      operationId: coreActionSetHomeDirectory
      tags:
        - core
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: dir
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/core/action/setMode/:
    get:
      description: >-
        Sets the mode, which may be one of [safe, protect, standard, attack]
      operationId: coreActionSetMode
      tags:
        - core
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: mode
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/core/action/generateRootCA/:
    get:
      description: >-
        Generates a new Root CA certificate for the local proxies.
      operationId: coreActionGenerateRootCA
      tags:
        - core
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/core/action/sendRequest/:
    get:
      description: >-
        Sends the HTTP request, optionally following redirections. Returns the request sent and response received and followed redirections, if any. The Mode is enforced when sending the request (and following redirections), custom manual requests are not allowed in 'Safe' mode nor in 'Protected' mode if out of scope.
      operationId: coreActionSendRequest
      tags:
        - core
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: request
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
      - name: followRedirects
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: boolean
  /JSON/core/action/runGarbageCollection/:
    get:
      description: >-
        
      operationId: coreActionRunGarbageCollection
      tags:
        - core
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/core/action/deleteSiteNode/:
    get:
      description: >-
        Deletes the site node found in the Sites Tree on the basis of the URL, HTTP method, and post data (if applicable and specified). 
      operationId: coreActionDeleteSiteNode
      tags:
        - core
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: url
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
      - name: method
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: string
      - name: postData
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/core/action/addProxyChainExcludedDomain/:
    get:
      description: >-
        Adds a domain to be excluded from the outgoing proxy, using the specified value. Optionally sets if the new entry is enabled (default, true) and whether or not the new value is specified as a regex (default, false).
      operationId: coreActionAddProxyChainExcludedDomain
      tags:
        - core
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: value
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
      - name: isRegex
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: boolean
      - name: isEnabled
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: boolean
  /JSON/core/action/modifyProxyChainExcludedDomain/:
    get:
      description: >-
        Modifies a domain excluded from the outgoing proxy. Allows to modify the value, if enabled or if a regex. The domain is selected with its index, which can be obtained with the view proxyChainExcludedDomains.
      operationId: coreActionModifyProxyChainExcludedDomain
      tags:
        - core
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: idx
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: integer
      - name: value
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: string
      - name: isRegex
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: boolean
      - name: isEnabled
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: boolean
  /JSON/core/action/removeProxyChainExcludedDomain/:
    get:
      description: >-
        Removes a domain excluded from the outgoing proxy, with the given index. The index can be obtained with the view proxyChainExcludedDomains.
      operationId: coreActionRemoveProxyChainExcludedDomain
      tags:
        - core
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: idx
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: integer
  /JSON/core/action/enableAllProxyChainExcludedDomains/:
    get:
      description: >-
        Enables all domains excluded from the outgoing proxy.
      operationId: coreActionEnableAllProxyChainExcludedDomains
      tags:
        - core
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/core/action/disableAllProxyChainExcludedDomains/:
    get:
      description: >-
        Disables all domains excluded from the outgoing proxy.
      operationId: coreActionDisableAllProxyChainExcludedDomains
      tags:
        - core
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/core/action/setOptionMaximumAlertInstances/:
    get:
      description: >-
        Sets the maximum number of alert instances to include in a report. A value of zero is treated as unlimited.
      operationId: coreActionSetOptionMaximumAlertInstances
      tags:
        - core
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: numberOfInstances
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: integer
  /JSON/core/action/setOptionMergeRelatedAlerts/:
    get:
      description: >-
        Sets whether or not related alerts will be merged in any reports generated.
      operationId: coreActionSetOptionMergeRelatedAlerts
      tags:
        - core
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: enabled
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: boolean
  /JSON/core/action/setOptionAlertOverridesFilePath/:
    get:
      description: >-
        Sets (or clears, if empty) the path to the file with alert overrides.
      operationId: coreActionSetOptionAlertOverridesFilePath
      tags:
        - core
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: filePath
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/core/action/enablePKCS12ClientCertificate/:
    get:
      description: >-
        Enables use of a PKCS12 client certificate for the certificate with the given file system path, password, and optional index.
      operationId: coreActionEnablePKCS12ClientCertificate
      tags:
        - core
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: filePath
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
      - name: password
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
      - name: index
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/core/action/disableClientCertificate/:
    get:
      description: >-
        Disables the option for use of client certificates.
      operationId: coreActionDisableClientCertificate
      tags:
        - core
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/core/action/deleteAllAlerts/:
    get:
      description: >-
        Deletes all alerts of the current session.
      deprecated: true
      operationId: coreActionDeleteAllAlerts
      tags:
        - core
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/core/action/deleteAlert/:
    get:
      description: >-
        Deletes the alert with the given ID. 
      deprecated: true
      operationId: coreActionDeleteAlert
      tags:
        - core
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: id
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: integer
  /JSON/core/action/setOptionDefaultUserAgent/:
    get:
      description: >-
        Sets the user agent that ZAP should use when creating HTTP messages (for example, spider messages or CONNECT requests to outgoing proxy).
      operationId: coreActionSetOptionDefaultUserAgent
      tags:
        - core
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: String
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/core/action/setOptionProxyChainName/:
    get:
      description: >-
        
      operationId: coreActionSetOptionProxyChainName
      tags:
        - core
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: String
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/core/action/setOptionProxyChainPassword/:
    get:
      description: >-
        
      operationId: coreActionSetOptionProxyChainPassword
      tags:
        - core
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: String
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/core/action/setOptionProxyChainRealm/:
    get:
      description: >-
        
      operationId: coreActionSetOptionProxyChainRealm
      tags:
        - core
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: String
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/core/action/setOptionProxyChainSkipName/:
    get:
      description: >-
        Use actions [add|modify|remove]ProxyChainExcludedDomain instead.
      operationId: coreActionSetOptionProxyChainSkipName
      tags:
        - core
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: String
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/core/action/setOptionProxyChainUserName/:
    get:
      description: >-
        
      operationId: coreActionSetOptionProxyChainUserName
      tags:
        - core
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: String
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/core/action/setOptionDnsTtlSuccessfulQueries/:
    get:
      description: >-
        Sets the TTL (in seconds) of successful DNS queries (applies after ZAP restart).
      operationId: coreActionSetOptionDnsTtlSuccessfulQueries
      tags:
        - core
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: Integer
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: integer
  /JSON/core/action/setOptionHttpStateEnabled/:
    get:
      description: >-
        
      operationId: coreActionSetOptionHttpStateEnabled
      tags:
        - core
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: Boolean
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/core/action/setOptionProxyChainPort/:
    get:
      description: >-
        
      operationId: coreActionSetOptionProxyChainPort
      tags:
        - core
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: Integer
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: integer
  /JSON/core/action/setOptionProxyChainPrompt/:
    get:
      description: >-
        
      operationId: coreActionSetOptionProxyChainPrompt
      tags:
        - core
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: Boolean
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/core/action/setOptionSingleCookieRequestHeader/:
    get:
      description: >-
        
      operationId: coreActionSetOptionSingleCookieRequestHeader
      tags:
        - core
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: Boolean
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/core/action/setOptionTimeoutInSecs/:
    get:
      description: >-
        Sets the connection time out, in seconds.
      operationId: coreActionSetOptionTimeoutInSecs
      tags:
        - core
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: Integer
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: integer
  /JSON/core/action/setOptionUseProxyChain/:
    get:
      description: >-
        Sets whether or not the outgoing proxy should be used. The address/hostname of the outgoing proxy must be set to enable this option.
      operationId: coreActionSetOptionUseProxyChain
      tags:
        - core
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: Boolean
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/core/action/setOptionUseProxyChainAuth/:
    get:
      description: >-
        
      operationId: coreActionSetOptionUseProxyChainAuth
      tags:
        - core
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: Boolean
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /OTHER/core/other/proxy.pac/:
    get:
      description: >-
        
      operationId: coreOtherProxy.pac
      tags:
        - core
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /OTHER/core/other/rootcert/:
    get:
      description: >-
        Gets the Root CA certificate used by the local proxies.
      operationId: coreOtherRootcert
      tags:
        - core
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /OTHER/core/other/setproxy/:
    get:
      description: >-
        
      operationId: coreOtherSetproxy
      tags:
        - core
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: proxy
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /OTHER/core/other/xmlreport/:
    get:
      description: >-
        Generates a report in XML format
      operationId: coreOtherXmlreport
      tags:
        - core
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /OTHER/core/other/htmlreport/:
    get:
      description: >-
        Generates a report in HTML format
      operationId: coreOtherHtmlreport
      tags:
        - core
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /OTHER/core/other/jsonreport/:
    get:
      description: >-
        Generates a report in JSON format
      operationId: coreOtherJsonreport
      tags:
        - core
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /OTHER/core/other/mdreport/:
    get:
      description: >-
        Generates a report in Markdown format
      operationId: coreOtherMdreport
      tags:
        - core
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /OTHER/core/other/messageHar/:
    get:
      description: >-
        Gets the message with the given ID in HAR format
      operationId: coreOtherMessageHar
      tags:
        - core
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: id
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: integer
  /OTHER/core/other/messagesHar/:
    get:
      description: >-
        Gets the HTTP messages sent through/by ZAP, in HAR format, optionally filtered by URL and paginated with 'start' position and 'count' of messages
      operationId: coreOtherMessagesHar
      tags:
        - core
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: baseurl
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: string
      - name: start
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: integer
      - name: count
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: integer
  /OTHER/core/other/messagesHarById/:
    get:
      description: >-
        Gets the HTTP messages with the given IDs, in HAR format.
      operationId: coreOtherMessagesHarById
      tags:
        - core
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: ids
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /OTHER/core/other/sendHarRequest/:
    get:
      description: >-
        Sends the first HAR request entry, optionally following redirections. Returns, in HAR format, the request sent and response received and followed redirections, if any. The Mode is enforced when sending the request (and following redirections), custom manual requests are not allowed in 'Safe' mode nor in 'Protected' mode if out of scope.
      operationId: coreOtherSendHarRequest
      tags:
        - core
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: request
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
      - name: followRedirects
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: boolean
  /JSON/params/view/params/:
    get:
      description: >-
        Shows the parameters for the specified site, or for all sites if the site is not specified
      operationId: paramsViewParams
      tags:
        - params
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: site
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/ascan/view/status/:
    get:
      description: >-
        
      operationId: ascanViewStatus
      tags:
        - ascan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: scanId
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: integer
  /JSON/ascan/view/scanProgress/:
    get:
      description: >-
        
      operationId: ascanViewScanProgress
      tags:
        - ascan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: scanId
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: integer
  /JSON/ascan/view/messagesIds/:
    get:
      description: >-
        Gets the IDs of the messages sent during the scan with the given ID. A message can be obtained with 'message' core view.
      operationId: ascanViewMessagesIds
      tags:
        - ascan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: scanId
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: integer
  /JSON/ascan/view/alertsIds/:
    get:
      description: >-
        Gets the IDs of the alerts raised during the scan with the given ID. An alert can be obtained with 'alert' core view.
      operationId: ascanViewAlertsIds
      tags:
        - ascan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: scanId
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: integer
  /JSON/ascan/view/scans/:
    get:
      description: >-
        
      operationId: ascanViewScans
      tags:
        - ascan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/ascan/view/scanPolicyNames/:
    get:
      description: >-
        
      operationId: ascanViewScanPolicyNames
      tags:
        - ascan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/ascan/view/excludedFromScan/:
    get:
      description: >-
        Gets the regexes of URLs excluded from the active scans.
      operationId: ascanViewExcludedFromScan
      tags:
        - ascan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/ascan/view/scanners/:
    get:
      description: >-
        Gets the scanners, optionally, of the given scan policy and/or scanner policy/category ID.
      operationId: ascanViewScanners
      tags:
        - ascan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: scanPolicyName
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: string
      - name: policyId
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: integer
  /JSON/ascan/view/policies/:
    get:
      description: >-
        
      operationId: ascanViewPolicies
      tags:
        - ascan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: scanPolicyName
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: string
      - name: policyId
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: integer
  /JSON/ascan/view/attackModeQueue/:
    get:
      description: >-
        
      operationId: ascanViewAttackModeQueue
      tags:
        - ascan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/ascan/view/excludedParams/:
    get:
      description: >-
        Gets all the parameters that are excluded. For each parameter the following are shown: the name, the URL, and the parameter type.
      operationId: ascanViewExcludedParams
      tags:
        - ascan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/ascan/view/optionExcludedParamList/:
    get:
      description: >-
        Use view excludedParams instead.
      deprecated: true
      operationId: ascanViewOptionExcludedParamList
      tags:
        - ascan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/ascan/view/excludedParamTypes/:
    get:
      description: >-
        Gets all the types of excluded parameters. For each type the following are shown: the ID and the name.
      operationId: ascanViewExcludedParamTypes
      tags:
        - ascan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/ascan/view/optionAttackPolicy/:
    get:
      description: >-
        
      operationId: ascanViewOptionAttackPolicy
      tags:
        - ascan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/ascan/view/optionDefaultPolicy/:
    get:
      description: >-
        
      operationId: ascanViewOptionDefaultPolicy
      tags:
        - ascan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/ascan/view/optionDelayInMs/:
    get:
      description: >-
        
      operationId: ascanViewOptionDelayInMs
      tags:
        - ascan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/ascan/view/optionHandleAntiCSRFTokens/:
    get:
      description: >-
        
      operationId: ascanViewOptionHandleAntiCSRFTokens
      tags:
        - ascan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/ascan/view/optionHostPerScan/:
    get:
      description: >-
        
      operationId: ascanViewOptionHostPerScan
      tags:
        - ascan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/ascan/view/optionMaxChartTimeInMins/:
    get:
      description: >-
        
      operationId: ascanViewOptionMaxChartTimeInMins
      tags:
        - ascan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/ascan/view/optionMaxResultsToList/:
    get:
      description: >-
        
      operationId: ascanViewOptionMaxResultsToList
      tags:
        - ascan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/ascan/view/optionMaxRuleDurationInMins/:
    get:
      description: >-
        
      operationId: ascanViewOptionMaxRuleDurationInMins
      tags:
        - ascan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/ascan/view/optionMaxScanDurationInMins/:
    get:
      description: >-
        
      operationId: ascanViewOptionMaxScanDurationInMins
      tags:
        - ascan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/ascan/view/optionMaxScansInUI/:
    get:
      description: >-
        
      operationId: ascanViewOptionMaxScansInUI
      tags:
        - ascan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/ascan/view/optionTargetParamsEnabledRPC/:
    get:
      description: >-
        
      operationId: ascanViewOptionTargetParamsEnabledRPC
      tags:
        - ascan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/ascan/view/optionTargetParamsInjectable/:
    get:
      description: >-
        
      operationId: ascanViewOptionTargetParamsInjectable
      tags:
        - ascan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/ascan/view/optionThreadPerHost/:
    get:
      description: >-
        
      operationId: ascanViewOptionThreadPerHost
      tags:
        - ascan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/ascan/view/optionAddQueryParam/:
    get:
      description: >-
        Tells whether or not the active scanner should add a query parameter to GET request that don't have parameters to start with.
      operationId: ascanViewOptionAddQueryParam
      tags:
        - ascan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/ascan/view/optionAllowAttackOnStart/:
    get:
      description: >-
        
      operationId: ascanViewOptionAllowAttackOnStart
      tags:
        - ascan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/ascan/view/optionInjectPluginIdInHeader/:
    get:
      description: >-
        Tells whether or not the active scanner should inject the HTTP request header X-ZAP-Scan-ID, with the ID of the scanner that's sending the requests.
      operationId: ascanViewOptionInjectPluginIdInHeader
      tags:
        - ascan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/ascan/view/optionPromptInAttackMode/:
    get:
      description: >-
        
      operationId: ascanViewOptionPromptInAttackMode
      tags:
        - ascan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/ascan/view/optionPromptToClearFinishedScans/:
    get:
      description: >-
        
      operationId: ascanViewOptionPromptToClearFinishedScans
      tags:
        - ascan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/ascan/view/optionRescanInAttackMode/:
    get:
      description: >-
        
      operationId: ascanViewOptionRescanInAttackMode
      tags:
        - ascan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/ascan/view/optionScanHeadersAllRequests/:
    get:
      description: >-
        Tells whether or not the HTTP Headers of all requests should be scanned. Not just requests that send parameters, through the query or request body.
      operationId: ascanViewOptionScanHeadersAllRequests
      tags:
        - ascan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/ascan/view/optionShowAdvancedDialog/:
    get:
      description: >-
        
      operationId: ascanViewOptionShowAdvancedDialog
      tags:
        - ascan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/ascan/action/scan/:
    get:
      description: >-
        Runs the active scanner against the given URL and/or Context. Optionally, the 'recurse' parameter can be used to scan URLs under the given URL, the parameter 'inScopeOnly' can be used to constrain the scan to URLs that are in scope (ignored if a Context is specified), the parameter 'scanPolicyName' allows to specify the scan policy (if none is given it uses the default scan policy), the parameters 'method' and 'postData' allow to select a given request in conjunction with the given URL.
      operationId: ascanActionScan
      tags:
        - ascan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: url
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: string
      - name: recurse
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: boolean
      - name: inScopeOnly
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: boolean
      - name: scanPolicyName
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: string
      - name: method
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: string
      - name: postData
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: string
      - name: contextId
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: integer
  /JSON/ascan/action/scanAsUser/:
    get:
      description: >-
        Active Scans from the perspective of a User, obtained using the given Context ID and User ID. See 'scan' action for more details.
      operationId: ascanActionScanAsUser
      tags:
        - ascan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: url
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: string
      - name: contextId
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: integer
      - name: userId
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: integer
      - name: recurse
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: boolean
      - name: scanPolicyName
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: string
      - name: method
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: string
      - name: postData
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/ascan/action/pause/:
    get:
      description: >-
        
      operationId: ascanActionPause
      tags:
        - ascan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: scanId
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: integer
  /JSON/ascan/action/resume/:
    get:
      description: >-
        
      operationId: ascanActionResume
      tags:
        - ascan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: scanId
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: integer
  /JSON/ascan/action/stop/:
    get:
      description: >-
        
      operationId: ascanActionStop
      tags:
        - ascan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: scanId
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: integer
  /JSON/ascan/action/removeScan/:
    get:
      description: >-
        
      operationId: ascanActionRemoveScan
      tags:
        - ascan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: scanId
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: integer
  /JSON/ascan/action/pauseAllScans/:
    get:
      description: >-
        
      operationId: ascanActionPauseAllScans
      tags:
        - ascan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/ascan/action/resumeAllScans/:
    get:
      description: >-
        
      operationId: ascanActionResumeAllScans
      tags:
        - ascan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/ascan/action/stopAllScans/:
    get:
      description: >-
        
      operationId: ascanActionStopAllScans
      tags:
        - ascan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/ascan/action/removeAllScans/:
    get:
      description: >-
        
      operationId: ascanActionRemoveAllScans
      tags:
        - ascan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/ascan/action/clearExcludedFromScan/:
    get:
      description: >-
        Clears the regexes of URLs excluded from the active scans.
      operationId: ascanActionClearExcludedFromScan
      tags:
        - ascan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/ascan/action/excludeFromScan/:
    get:
      description: >-
        Adds a regex of URLs that should be excluded from the active scans.
      operationId: ascanActionExcludeFromScan
      tags:
        - ascan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: regex
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/ascan/action/enableAllScanners/:
    get:
      description: >-
        Enables all scanners of the scan policy with the given name, or the default if none given.
      operationId: ascanActionEnableAllScanners
      tags:
        - ascan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: scanPolicyName
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/ascan/action/disableAllScanners/:
    get:
      description: >-
        Disables all scanners of the scan policy with the given name, or the default if none given.
      operationId: ascanActionDisableAllScanners
      tags:
        - ascan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: scanPolicyName
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/ascan/action/enableScanners/:
    get:
      description: >-
        Enables the scanners with the given IDs (comma separated list of IDs) of the scan policy with the given name, or the default if none given.
      operationId: ascanActionEnableScanners
      tags:
        - ascan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: ids
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
      - name: scanPolicyName
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/ascan/action/disableScanners/:
    get:
      description: >-
        Disables the scanners with the given IDs (comma separated list of IDs) of the scan policy with the given name, or the default if none given.
      operationId: ascanActionDisableScanners
      tags:
        - ascan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: ids
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
      - name: scanPolicyName
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/ascan/action/setEnabledPolicies/:
    get:
      description: >-
        
      operationId: ascanActionSetEnabledPolicies
      tags:
        - ascan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: ids
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
      - name: scanPolicyName
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/ascan/action/setPolicyAttackStrength/:
    get:
      description: >-
        
      operationId: ascanActionSetPolicyAttackStrength
      tags:
        - ascan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: id
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: integer
      - name: attackStrength
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
      - name: scanPolicyName
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/ascan/action/setPolicyAlertThreshold/:
    get:
      description: >-
        
      operationId: ascanActionSetPolicyAlertThreshold
      tags:
        - ascan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: id
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: integer
      - name: alertThreshold
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
      - name: scanPolicyName
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/ascan/action/setScannerAttackStrength/:
    get:
      description: >-
        
      operationId: ascanActionSetScannerAttackStrength
      tags:
        - ascan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: id
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: integer
      - name: attackStrength
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
      - name: scanPolicyName
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/ascan/action/setScannerAlertThreshold/:
    get:
      description: >-
        
      operationId: ascanActionSetScannerAlertThreshold
      tags:
        - ascan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: id
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: integer
      - name: alertThreshold
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
      - name: scanPolicyName
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/ascan/action/addScanPolicy/:
    get:
      description: >-
        
      operationId: ascanActionAddScanPolicy
      tags:
        - ascan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: scanPolicyName
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
      - name: alertThreshold
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: string
      - name: attackStrength
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/ascan/action/removeScanPolicy/:
    get:
      description: >-
        
      operationId: ascanActionRemoveScanPolicy
      tags:
        - ascan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: scanPolicyName
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/ascan/action/updateScanPolicy/:
    get:
      description: >-
        
      operationId: ascanActionUpdateScanPolicy
      tags:
        - ascan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: scanPolicyName
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
      - name: alertThreshold
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: string
      - name: attackStrength
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/ascan/action/importScanPolicy/:
    get:
      description: >-
        Imports a Scan Policy using the given file system path.
      operationId: ascanActionImportScanPolicy
      tags:
        - ascan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: path
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/ascan/action/addExcludedParam/:
    get:
      description: >-
        Adds a new parameter excluded from the scan, using the specified name. Optionally sets if the new entry applies to a specific URL (default, all URLs) and sets the ID of the type of the parameter (default, ID of any type). The type IDs can be obtained with the view excludedParamTypes. 
      operationId: ascanActionAddExcludedParam
      tags:
        - ascan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: name
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
      - name: type
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: string
      - name: url
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/ascan/action/modifyExcludedParam/:
    get:
      description: >-
        Modifies a parameter excluded from the scan. Allows to modify the name, the URL and the type of parameter. The parameter is selected with its index, which can be obtained with the view excludedParams.
      operationId: ascanActionModifyExcludedParam
      tags:
        - ascan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: idx
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: integer
      - name: name
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: string
      - name: type
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: string
      - name: url
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/ascan/action/removeExcludedParam/:
    get:
      description: >-
        Removes a parameter excluded from the scan, with the given index. The index can be obtained with the view excludedParams.
      operationId: ascanActionRemoveExcludedParam
      tags:
        - ascan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: idx
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: integer
  /JSON/ascan/action/skipScanner/:
    get:
      description: >-
        Skips the scanner using the given IDs of the scan and the scanner.
      operationId: ascanActionSkipScanner
      tags:
        - ascan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: scanId
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: integer
      - name: scannerId
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: integer
  /JSON/ascan/action/setOptionAttackPolicy/:
    get:
      description: >-
        
      operationId: ascanActionSetOptionAttackPolicy
      tags:
        - ascan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: String
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/ascan/action/setOptionDefaultPolicy/:
    get:
      description: >-
        
      operationId: ascanActionSetOptionDefaultPolicy
      tags:
        - ascan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: String
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/ascan/action/setOptionAddQueryParam/:
    get:
      description: >-
        Sets whether or not the active scanner should add a query param to GET requests which do not have parameters to start with.
      operationId: ascanActionSetOptionAddQueryParam
      tags:
        - ascan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: Boolean
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/ascan/action/setOptionAllowAttackOnStart/:
    get:
      description: >-
        
      operationId: ascanActionSetOptionAllowAttackOnStart
      tags:
        - ascan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: Boolean
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/ascan/action/setOptionDelayInMs/:
    get:
      description: >-
        
      operationId: ascanActionSetOptionDelayInMs
      tags:
        - ascan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: Integer
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: integer
  /JSON/ascan/action/setOptionHandleAntiCSRFTokens/:
    get:
      description: >-
        
      operationId: ascanActionSetOptionHandleAntiCSRFTokens
      tags:
        - ascan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: Boolean
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/ascan/action/setOptionHostPerScan/:
    get:
      description: >-
        
      operationId: ascanActionSetOptionHostPerScan
      tags:
        - ascan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: Integer
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: integer
  /JSON/ascan/action/setOptionInjectPluginIdInHeader/:
    get:
      description: >-
        Sets whether or not the active scanner should inject the HTTP request header X-ZAP-Scan-ID, with the ID of the scanner that's sending the requests.
      operationId: ascanActionSetOptionInjectPluginIdInHeader
      tags:
        - ascan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: Boolean
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/ascan/action/setOptionMaxChartTimeInMins/:
    get:
      description: >-
        
      operationId: ascanActionSetOptionMaxChartTimeInMins
      tags:
        - ascan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: Integer
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: integer
  /JSON/ascan/action/setOptionMaxResultsToList/:
    get:
      description: >-
        
      operationId: ascanActionSetOptionMaxResultsToList
      tags:
        - ascan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: Integer
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: integer
  /JSON/ascan/action/setOptionMaxRuleDurationInMins/:
    get:
      description: >-
        
      operationId: ascanActionSetOptionMaxRuleDurationInMins
      tags:
        - ascan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: Integer
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: integer
  /JSON/ascan/action/setOptionMaxScanDurationInMins/:
    get:
      description: >-
        
      operationId: ascanActionSetOptionMaxScanDurationInMins
      tags:
        - ascan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: Integer
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: integer
  /JSON/ascan/action/setOptionMaxScansInUI/:
    get:
      description: >-
        
      operationId: ascanActionSetOptionMaxScansInUI
      tags:
        - ascan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: Integer
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: integer
  /JSON/ascan/action/setOptionPromptInAttackMode/:
    get:
      description: >-
        
      operationId: ascanActionSetOptionPromptInAttackMode
      tags:
        - ascan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: Boolean
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/ascan/action/setOptionPromptToClearFinishedScans/:
    get:
      description: >-
        
      operationId: ascanActionSetOptionPromptToClearFinishedScans
      tags:
        - ascan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: Boolean
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/ascan/action/setOptionRescanInAttackMode/:
    get:
      description: >-
        
      operationId: ascanActionSetOptionRescanInAttackMode
      tags:
        - ascan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: Boolean
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/ascan/action/setOptionScanHeadersAllRequests/:
    get:
      description: >-
        Sets whether or not the HTTP Headers of all requests should be scanned. Not just requests that send parameters, through the query or request body.
      operationId: ascanActionSetOptionScanHeadersAllRequests
      tags:
        - ascan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: Boolean
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/ascan/action/setOptionShowAdvancedDialog/:
    get:
      description: >-
        
      operationId: ascanActionSetOptionShowAdvancedDialog
      tags:
        - ascan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: Boolean
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/ascan/action/setOptionTargetParamsEnabledRPC/:
    get:
      description: >-
        
      operationId: ascanActionSetOptionTargetParamsEnabledRPC
      tags:
        - ascan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: Integer
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: integer
  /JSON/ascan/action/setOptionTargetParamsInjectable/:
    get:
      description: >-
        
      operationId: ascanActionSetOptionTargetParamsInjectable
      tags:
        - ascan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: Integer
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: integer
  /JSON/ascan/action/setOptionThreadPerHost/:
    get:
      description: >-
        
      operationId: ascanActionSetOptionThreadPerHost
      tags:
        - ascan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: Integer
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: integer
  /JSON/context/view/contextList/:
    get:
      description: >-
        List context names of current session
      operationId: contextViewContextList
      tags:
        - context
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/context/view/excludeRegexs/:
    get:
      description: >-
        List excluded regexs for context
      operationId: contextViewExcludeRegexs
      tags:
        - context
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: contextName
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/context/view/includeRegexs/:
    get:
      description: >-
        List included regexs for context
      operationId: contextViewIncludeRegexs
      tags:
        - context
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: contextName
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/context/view/context/:
    get:
      description: >-
        List the information about the named context
      operationId: contextViewContext
      tags:
        - context
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: contextName
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/context/view/technologyList/:
    get:
      description: >-
        Lists the names of all built in technologies
      operationId: contextViewTechnologyList
      tags:
        - context
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/context/view/includedTechnologyList/:
    get:
      description: >-
        Lists the names of all technologies included in a context
      operationId: contextViewIncludedTechnologyList
      tags:
        - context
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: contextName
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/context/view/excludedTechnologyList/:
    get:
      description: >-
        Lists the names of all technologies excluded from a context
      operationId: contextViewExcludedTechnologyList
      tags:
        - context
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: contextName
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/context/view/urls/:
    get:
      description: >-
        Lists the URLs accessed through/by ZAP, that belong to the context with the given name.
      operationId: contextViewUrls
      tags:
        - context
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: contextName
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/context/action/excludeFromContext/:
    get:
      description: >-
        Add exclude regex to context
      operationId: contextActionExcludeFromContext
      tags:
        - context
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: contextName
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
      - name: regex
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/context/action/includeInContext/:
    get:
      description: >-
        Add include regex to context
      operationId: contextActionIncludeInContext
      tags:
        - context
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: contextName
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
      - name: regex
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/context/action/setContextRegexs/:
    get:
      description: >-
        Set the regexs to include and exclude for a context, both supplied as JSON string arrays
      operationId: contextActionSetContextRegexs
      tags:
        - context
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: contextName
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
      - name: incRegexs
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
      - name: excRegexs
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/context/action/newContext/:
    get:
      description: >-
        Creates a new context with the given name in the current session
      operationId: contextActionNewContext
      tags:
        - context
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: contextName
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/context/action/removeContext/:
    get:
      description: >-
        Removes a context in the current session
      operationId: contextActionRemoveContext
      tags:
        - context
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: contextName
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/context/action/exportContext/:
    get:
      description: >-
        Exports the context with the given name to a file. If a relative file path is specified it will be resolved against the "contexts" directory in ZAP "home" dir.
      operationId: contextActionExportContext
      tags:
        - context
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: contextName
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
      - name: contextFile
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/context/action/importContext/:
    get:
      description: >-
        Imports a context from a file. If a relative file path is specified it will be resolved against the "contexts" directory in ZAP "home" dir.
      operationId: contextActionImportContext
      tags:
        - context
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: contextFile
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/context/action/includeContextTechnologies/:
    get:
      description: >-
        Includes technologies with the given names, separated by a comma, to a context
      operationId: contextActionIncludeContextTechnologies
      tags:
        - context
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: contextName
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
      - name: technologyNames
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/context/action/includeAllContextTechnologies/:
    get:
      description: >-
        Includes all built in technologies in to a context
      operationId: contextActionIncludeAllContextTechnologies
      tags:
        - context
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: contextName
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/context/action/excludeContextTechnologies/:
    get:
      description: >-
        Excludes technologies with the given names, separated by a comma, from a context
      operationId: contextActionExcludeContextTechnologies
      tags:
        - context
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: contextName
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
      - name: technologyNames
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/context/action/excludeAllContextTechnologies/:
    get:
      description: >-
        Excludes all built in technologies from a context
      operationId: contextActionExcludeAllContextTechnologies
      tags:
        - context
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: contextName
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/context/action/setContextInScope/:
    get:
      description: >-
        Sets a context to in scope (contexts are in scope by default)
      operationId: contextActionSetContextInScope
      tags:
        - context
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: contextName
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
      - name: booleanInScope
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: boolean
  /JSON/httpSessions/view/sites/:
    get:
      description: >-
        Gets all of the sites that have sessions.
      operationId: httpSessionsViewSites
      tags:
        - httpSessions
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/httpSessions/view/sessions/:
    get:
      description: >-
        Gets the sessions for the given site. Optionally returning just the session with the given name.
      operationId: httpSessionsViewSessions
      tags:
        - httpSessions
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: site
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
      - name: session
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/httpSessions/view/activeSession/:
    get:
      description: >-
        Gets the name of the active session for the given site.
      operationId: httpSessionsViewActiveSession
      tags:
        - httpSessions
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: site
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/httpSessions/view/sessionTokens/:
    get:
      description: >-
        Gets the names of the session tokens for the given site.
      operationId: httpSessionsViewSessionTokens
      tags:
        - httpSessions
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: site
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/httpSessions/view/defaultSessionTokens/:
    get:
      description: >-
        Gets the default session tokens.
      operationId: httpSessionsViewDefaultSessionTokens
      tags:
        - httpSessions
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/httpSessions/action/createEmptySession/:
    get:
      description: >-
        Creates an empty session for the given site. Optionally with the given name.
      operationId: httpSessionsActionCreateEmptySession
      tags:
        - httpSessions
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: site
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
      - name: session
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/httpSessions/action/removeSession/:
    get:
      description: >-
        Removes the session from the given site.
      operationId: httpSessionsActionRemoveSession
      tags:
        - httpSessions
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: site
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
      - name: session
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/httpSessions/action/setActiveSession/:
    get:
      description: >-
        Sets the given session as active for the given site.
      operationId: httpSessionsActionSetActiveSession
      tags:
        - httpSessions
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: site
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
      - name: session
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/httpSessions/action/unsetActiveSession/:
    get:
      description: >-
        Unsets the active session of the given site.
      operationId: httpSessionsActionUnsetActiveSession
      tags:
        - httpSessions
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: site
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/httpSessions/action/addSessionToken/:
    get:
      description: >-
        Adds the session token to the given site.
      operationId: httpSessionsActionAddSessionToken
      tags:
        - httpSessions
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: site
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
      - name: sessionToken
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/httpSessions/action/removeSessionToken/:
    get:
      description: >-
        Removes the session token from the given site.
      operationId: httpSessionsActionRemoveSessionToken
      tags:
        - httpSessions
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: site
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
      - name: sessionToken
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/httpSessions/action/setSessionTokenValue/:
    get:
      description: >-
        Sets the value of the session token of the given session for the given site.
      operationId: httpSessionsActionSetSessionTokenValue
      tags:
        - httpSessions
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: site
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
      - name: session
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
      - name: sessionToken
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
      - name: tokenValue
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/httpSessions/action/renameSession/:
    get:
      description: >-
        Renames the session of the given site.
      operationId: httpSessionsActionRenameSession
      tags:
        - httpSessions
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: site
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
      - name: oldSessionName
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
      - name: newSessionName
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/httpSessions/action/addDefaultSessionToken/:
    get:
      description: >-
        Adds a default session token with the given name and enabled state.
      operationId: httpSessionsActionAddDefaultSessionToken
      tags:
        - httpSessions
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: sessionToken
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
      - name: tokenEnabled
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/httpSessions/action/setDefaultSessionTokenEnabled/:
    get:
      description: >-
        Sets whether or not the default session token with the given name is enabled.
      operationId: httpSessionsActionSetDefaultSessionTokenEnabled
      tags:
        - httpSessions
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: sessionToken
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
      - name: tokenEnabled
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/httpSessions/action/removeDefaultSessionToken/:
    get:
      description: >-
        Removes the default session token with the given name.
      operationId: httpSessionsActionRemoveDefaultSessionToken
      tags:
        - httpSessions
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: sessionToken
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/break/view/isBreakAll/:
    get:
      description: >-
        Returns True if ZAP will break on both requests and responses
      operationId: breakViewIsBreakAll
      tags:
        - break
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/break/view/isBreakRequest/:
    get:
      description: >-
        Returns True if ZAP will break on requests
      operationId: breakViewIsBreakRequest
      tags:
        - break
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/break/view/isBreakResponse/:
    get:
      description: >-
        Returns True if ZAP will break on responses
      operationId: breakViewIsBreakResponse
      tags:
        - break
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/break/view/httpMessage/:
    get:
      description: >-
        Returns the HTTP message currently intercepted (if any)
      operationId: breakViewHttpMessage
      tags:
        - break
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/break/action/break/:
    get:
      description: >-
        Controls the global break functionality. The type may be one of: http-all, http-request or http-response. The state may be true (for turning break on for the specified type) or false (for turning break off). Scope is not currently used.
      operationId: breakActionBreak
      tags:
        - break
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: type
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
      - name: state
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
      - name: scope
        in: query
        required: false
        deprecated: true
        description: ""
        schema:
          type: string
  /JSON/break/action/setHttpMessage/:
    get:
      description: >-
        Overwrites the currently intercepted message with the data provided
      operationId: breakActionSetHttpMessage
      tags:
        - break
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: httpHeader
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
      - name: httpBody
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/break/action/continue/:
    get:
      description: >-
        Submits the currently intercepted message and unsets the global request/response break points
      operationId: breakActionContinue
      tags:
        - break
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/break/action/step/:
    get:
      description: >-
        Submits the currently intercepted message, the next request or response will automatically be intercepted
      operationId: breakActionStep
      tags:
        - break
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/break/action/drop/:
    get:
      description: >-
        Drops the currently intercepted message
      operationId: breakActionDrop
      tags:
        - break
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/break/action/addHttpBreakpoint/:
    get:
      description: >-
        Adds a custom HTTP breakpoint. The string is the string to match. Location may be one of: url, request_header, request_body, response_header or response_body. Match may be: contains or regex. Inverse (match) may be true or false. Lastly, ignorecase (when matching the string) may be true or false.  
      operationId: breakActionAddHttpBreakpoint
      tags:
        - break
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: string
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
      - name: location
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
      - name: match
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
      - name: inverse
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: boolean
      - name: ignorecase
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: boolean
  /JSON/break/action/removeHttpBreakpoint/:
    get:
      description: >-
        Removes the specified break point
      operationId: breakActionRemoveHttpBreakpoint
      tags:
        - break
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: string
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
      - name: location
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
      - name: match
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
      - name: inverse
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: boolean
      - name: ignorecase
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: boolean
  /JSON/authentication/view/getSupportedAuthenticationMethods/:
    get:
      description: >-
        Gets the name of the authentication methods.
      operationId: authenticationViewGetSupportedAuthenticationMethods
      tags:
        - authentication
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/authentication/view/getAuthenticationMethodConfigParams/:
    get:
      description: >-
        Gets the configuration parameters for the authentication method with the given name.
      operationId: authenticationViewGetAuthenticationMethodConfigParams
      tags:
        - authentication
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: authMethodName
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/authentication/view/getAuthenticationMethod/:
    get:
      description: >-
        Gets the name of the authentication method for the context with the given ID.
      operationId: authenticationViewGetAuthenticationMethod
      tags:
        - authentication
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: contextId
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: integer
  /JSON/authentication/view/getLoggedInIndicator/:
    get:
      description: >-
        Gets the logged in indicator for the context with the given ID.
      operationId: authenticationViewGetLoggedInIndicator
      tags:
        - authentication
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: contextId
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: integer
  /JSON/authentication/view/getLoggedOutIndicator/:
    get:
      description: >-
        Gets the logged out indicator for the context with the given ID.
      operationId: authenticationViewGetLoggedOutIndicator
      tags:
        - authentication
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: contextId
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: integer
  /JSON/authentication/action/setAuthenticationMethod/:
    get:
      description: >-
        Sets the authentication method for the context with the given ID.
      operationId: authenticationActionSetAuthenticationMethod
      tags:
        - authentication
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: contextId
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: integer
      - name: authMethodName
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
      - name: authMethodConfigParams
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/authentication/action/setLoggedInIndicator/:
    get:
      description: >-
        Sets the logged in indicator for the context with the given ID.
      operationId: authenticationActionSetLoggedInIndicator
      tags:
        - authentication
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: contextId
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: integer
      - name: loggedInIndicatorRegex
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/authentication/action/setLoggedOutIndicator/:
    get:
      description: >-
        Sets the logged out indicator for the context with the given ID.
      operationId: authenticationActionSetLoggedOutIndicator
      tags:
        - authentication
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: contextId
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: integer
      - name: loggedOutIndicatorRegex
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/authorization/view/getAuthorizationDetectionMethod/:
    get:
      description: >-
        Obtains all the configuration of the authorization detection method that is currently set for a context.
      operationId: authorizationViewGetAuthorizationDetectionMethod
      tags:
        - authorization
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: contextId
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: integer
  /JSON/authorization/action/setBasicAuthorizationDetectionMethod/:
    get:
      description: >-
        Sets the authorization detection method for a context as one that identifies un-authorized messages based on: the message's status code or a regex pattern in the response's header or body. Also, whether all conditions must match or just some can be specified via the logicalOperator parameter, which accepts two values: "AND" (default), "OR".  
      operationId: authorizationActionSetBasicAuthorizationDetectionMethod
      tags:
        - authorization
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: contextId
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: integer
      - name: headerRegex
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: string
      - name: bodyRegex
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: string
      - name: statusCode
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: string
      - name: logicalOperator
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/localProxies/view/additionalProxies/:
    get:
      description: >-
        Gets all of the additional proxies that have been configured.
      operationId: localProxiesViewAdditionalProxies
      tags:
        - localProxies
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/localProxies/action/addAdditionalProxy/:
    get:
      description: >-
        Adds an new proxy using the details supplied.
      operationId: localProxiesActionAddAdditionalProxy
      tags:
        - localProxies
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: address
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
      - name: port
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: integer
      - name: behindNat
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: boolean
      - name: alwaysDecodeZip
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: boolean
      - name: removeUnsupportedEncodings
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: boolean
  /JSON/localProxies/action/removeAdditionalProxy/:
    get:
      description: >-
        Removes the additional proxy with the specified address and port.
      operationId: localProxiesActionRemoveAdditionalProxy
      tags:
        - localProxies
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: address
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
      - name: port
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: integer
  /JSON/ruleConfig/view/ruleConfigValue/:
    get:
      description: >-
        Show the specified rule configuration
      operationId: ruleConfigViewRuleConfigValue
      tags:
        - ruleConfig
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: key
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/ruleConfig/view/allRuleConfigs/:
    get:
      description: >-
        Show all of the rule configurations
      operationId: ruleConfigViewAllRuleConfigs
      tags:
        - ruleConfig
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/ruleConfig/action/resetRuleConfigValue/:
    get:
      description: >-
        Reset the specified rule configuration, which must already exist
      operationId: ruleConfigActionResetRuleConfigValue
      tags:
        - ruleConfig
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: key
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/ruleConfig/action/resetAllRuleConfigValues/:
    get:
      description: >-
        Reset all of the rule configurations
      operationId: ruleConfigActionResetAllRuleConfigValues
      tags:
        - ruleConfig
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/ruleConfig/action/setRuleConfigValue/:
    get:
      description: >-
        Set the specified rule configuration, which must already exist
      operationId: ruleConfigActionSetRuleConfigValue
      tags:
        - ruleConfig
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: key
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
      - name: value
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/sessionManagement/view/getSupportedSessionManagementMethods/:
    get:
      description: >-
        Gets the name of the session management methods.
      operationId: sessionManagementViewGetSupportedSessionManagementMethods
      tags:
        - sessionManagement
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/sessionManagement/view/getSessionManagementMethodConfigParams/:
    get:
      description: >-
        Gets the configuration parameters for the session management method with the given name.
      operationId: sessionManagementViewGetSessionManagementMethodConfigParams
      tags:
        - sessionManagement
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: methodName
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/sessionManagement/view/getSessionManagementMethod/:
    get:
      description: >-
        Gets the name of the session management method for the context with the given ID.
      operationId: sessionManagementViewGetSessionManagementMethod
      tags:
        - sessionManagement
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: contextId
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: integer
  /JSON/sessionManagement/action/setSessionManagementMethod/:
    get:
      description: >-
        Sets the session management method for the context with the given ID.
      operationId: sessionManagementActionSetSessionManagementMethod
      tags:
        - sessionManagement
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: contextId
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: integer
      - name: methodName
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
      - name: methodConfigParams
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/users/view/usersList/:
    get:
      description: >-
        Gets a list of users that belong to the context with the given ID, or all users if none provided.
      operationId: usersViewUsersList
      tags:
        - users
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: contextId
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: integer
  /JSON/users/view/getUserById/:
    get:
      description: >-
        Gets the data of the user with the given ID that belongs to the context with the given ID.
      operationId: usersViewGetUserById
      tags:
        - users
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: contextId
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: integer
      - name: userId
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: integer
  /JSON/users/view/getAuthenticationCredentialsConfigParams/:
    get:
      description: >-
        Gets the configuration parameters for the credentials of the context with the given ID.
      operationId: usersViewGetAuthenticationCredentialsConfigParams
      tags:
        - users
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: contextId
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: integer
  /JSON/users/view/getAuthenticationCredentials/:
    get:
      description: >-
        Gets the authentication credentials of the user with given ID that belongs to the context with the given ID.
      operationId: usersViewGetAuthenticationCredentials
      tags:
        - users
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: contextId
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: integer
      - name: userId
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: integer
  /JSON/users/action/newUser/:
    get:
      description: >-
        Creates a new user with the given name for the context with the given ID.
      operationId: usersActionNewUser
      tags:
        - users
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: contextId
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: integer
      - name: name
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/users/action/removeUser/:
    get:
      description: >-
        Removes the user with the given ID that belongs to the context with the given ID.
      operationId: usersActionRemoveUser
      tags:
        - users
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: contextId
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: integer
      - name: userId
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: integer
  /JSON/users/action/setUserEnabled/:
    get:
      description: >-
        Sets whether or not the user, with the given ID that belongs to the context with the given ID, should be enabled.
      operationId: usersActionSetUserEnabled
      tags:
        - users
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: contextId
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: integer
      - name: userId
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: integer
      - name: enabled
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: boolean
  /JSON/users/action/setUserName/:
    get:
      description: >-
        Renames the user with the given ID that belongs to the context with the given ID.
      operationId: usersActionSetUserName
      tags:
        - users
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: contextId
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: integer
      - name: userId
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: integer
      - name: name
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/users/action/setAuthenticationCredentials/:
    get:
      description: >-
        Sets the authentication credentials for the user with the given ID that belongs to the context with the given ID.
      operationId: usersActionSetAuthenticationCredentials
      tags:
        - users
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: contextId
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: integer
      - name: userId
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: integer
      - name: authCredentialsConfigParams
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/forcedUser/view/isForcedUserModeEnabled/:
    get:
      description: >-
        Returns 'true' if 'forced user' mode is enabled, 'false' otherwise
      operationId: forcedUserViewIsForcedUserModeEnabled
      tags:
        - forcedUser
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/forcedUser/view/getForcedUser/:
    get:
      description: >-
        Gets the user (ID) set as 'forced user' for the given context (ID)
      operationId: forcedUserViewGetForcedUser
      tags:
        - forcedUser
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: contextId
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: integer
  /JSON/forcedUser/action/setForcedUser/:
    get:
      description: >-
        Sets the user (ID) that should be used in 'forced user' mode for the given context (ID)
      operationId: forcedUserActionSetForcedUser
      tags:
        - forcedUser
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: contextId
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: integer
      - name: userId
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: integer
  /JSON/forcedUser/action/setForcedUserModeEnabled/:
    get:
      description: >-
        Sets if 'forced user' mode should be enabled or not
      operationId: forcedUserActionSetForcedUserModeEnabled
      tags:
        - forcedUser
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: boolean
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: boolean
  /JSON/script/view/listEngines/:
    get:
      description: >-
        Lists the script engines available
      operationId: scriptViewListEngines
      tags:
        - script
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/script/view/listTypes/:
    get:
      description: >-
        Lists the script types available.
      operationId: scriptViewListTypes
      tags:
        - script
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/script/view/listScripts/:
    get:
      description: >-
        Lists the scripts available, with its engine, name, description, type and error state.
      operationId: scriptViewListScripts
      tags:
        - script
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/script/view/globalVar/:
    get:
      description: >-
        Gets the value of the global variable with the given key. Returns an API error (DOES_NOT_EXIST) if no value was previously set.
      operationId: scriptViewGlobalVar
      tags:
        - script
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: varKey
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/script/view/globalVars/:
    get:
      description: >-
        Gets all the global variables (key/value pairs).
      operationId: scriptViewGlobalVars
      tags:
        - script
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/script/view/scriptVar/:
    get:
      description: >-
        Gets the value of the variable with the given key for the given script. Returns an API error (DOES_NOT_EXIST) if no script with the given name exists or if no value was previously set.
      operationId: scriptViewScriptVar
      tags:
        - script
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: scriptName
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
      - name: varKey
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/script/view/scriptVars/:
    get:
      description: >-
        Gets all the variables (key/value pairs) of the given script. Returns an API error (DOES_NOT_EXIST) if no script with the given name exists.
      operationId: scriptViewScriptVars
      tags:
        - script
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: scriptName
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/script/action/enable/:
    get:
      description: >-
        Enables the script with the given name
      operationId: scriptActionEnable
      tags:
        - script
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: scriptName
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/script/action/disable/:
    get:
      description: >-
        Disables the script with the given name
      operationId: scriptActionDisable
      tags:
        - script
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: scriptName
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/script/action/load/:
    get:
      description: >-
        Loads a script into ZAP from the given local file, with the given name, type and engine, optionally with a description, and a charset name to read the script (the charset name is required if the script is not in UTF-8, for example, in ISO-8859-1).
      operationId: scriptActionLoad
      tags:
        - script
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: scriptName
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
      - name: scriptType
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
      - name: scriptEngine
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
      - name: fileName
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
      - name: scriptDescription
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: string
      - name: charset
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: string
          default: "UTF-8"
  /JSON/script/action/remove/:
    get:
      description: >-
        Removes the script with the given name
      operationId: scriptActionRemove
      tags:
        - script
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: scriptName
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/script/action/runStandAloneScript/:
    get:
      description: >-
        Runs the stand alone script with the given name
      operationId: scriptActionRunStandAloneScript
      tags:
        - script
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: scriptName
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/script/action/clearGlobalVar/:
    get:
      description: >-
        Clears the global variable with the given key.
      operationId: scriptActionClearGlobalVar
      tags:
        - script
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: varKey
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/script/action/clearGlobalVars/:
    get:
      description: >-
        Clears the global variables.
      operationId: scriptActionClearGlobalVars
      tags:
        - script
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/script/action/clearScriptVar/:
    get:
      description: >-
        Clears the variable with the given key of the given script. Returns an API error (DOES_NOT_EXIST) if no script with the given name exists.
      operationId: scriptActionClearScriptVar
      tags:
        - script
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: scriptName
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
      - name: varKey
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/script/action/clearScriptVars/:
    get:
      description: >-
        Clears the variables of the given script. Returns an API error (DOES_NOT_EXIST) if no script with the given name exists.
      operationId: scriptActionClearScriptVars
      tags:
        - script
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: scriptName
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/script/action/setScriptVar/:
    get:
      description: >-
        Sets the value of the variable with the given key of the given script. Returns an API error (DOES_NOT_EXIST) if no script with the given name exists.
      operationId: scriptActionSetScriptVar
      tags:
        - script
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: scriptName
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
      - name: varKey
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
      - name: varValue
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/script/action/setGlobalVar/:
    get:
      description: >-
        Sets the value of the global variable with the given key.
      operationId: scriptActionSetGlobalVar
      tags:
        - script
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: varKey
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
      - name: varValue
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/stats/view/stats/:
    get:
      description: >-
        Statistics
      operationId: statsViewStats
      tags:
        - stats
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: keyPrefix
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/stats/view/allSitesStats/:
    get:
      description: >-
        Gets all of the site based statistics, optionally filtered by a key prefix
      operationId: statsViewAllSitesStats
      tags:
        - stats
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: keyPrefix
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/stats/view/siteStats/:
    get:
      description: >-
        Gets all of the global statistics, optionally filtered by a key prefix
      operationId: statsViewSiteStats
      tags:
        - stats
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: site
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
      - name: keyPrefix
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/stats/view/optionStatsdHost/:
    get:
      description: >-
        Gets the Statsd service hostname
      operationId: statsViewOptionStatsdHost
      tags:
        - stats
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/stats/view/optionStatsdPort/:
    get:
      description: >-
        Gets the Statsd service port
      operationId: statsViewOptionStatsdPort
      tags:
        - stats
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/stats/view/optionStatsdPrefix/:
    get:
      description: >-
        Gets the prefix to be applied to all stats sent to the configured Statsd service
      operationId: statsViewOptionStatsdPrefix
      tags:
        - stats
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/stats/view/optionInMemoryEnabled/:
    get:
      description: >-
        Returns 'true' if in memory statistics are enabled, otherwise returns 'false'
      operationId: statsViewOptionInMemoryEnabled
      tags:
        - stats
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/stats/view/optionStatsdEnabled/:
    get:
      description: >-
        Returns 'true' if a Statsd server has been correctly configured, otherwise returns 'false'
      operationId: statsViewOptionStatsdEnabled
      tags:
        - stats
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /JSON/stats/action/clearStats/:
    get:
      description: >-
        Clears all of the statistics
      operationId: statsActionClearStats
      tags:
        - stats
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: keyPrefix
        in: query
        required: false
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/stats/action/setOptionStatsdHost/:
    get:
      description: >-
        Sets the Statsd service hostname, supply an empty string to stop using a Statsd service
      operationId: statsActionSetOptionStatsdHost
      tags:
        - stats
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: String
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/stats/action/setOptionStatsdPrefix/:
    get:
      description: >-
        Sets the prefix to be applied to all stats sent to the configured Statsd service
      operationId: statsActionSetOptionStatsdPrefix
      tags:
        - stats
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: String
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/stats/action/setOptionInMemoryEnabled/:
    get:
      description: >-
        Sets whether in memory statistics are enabled
      operationId: statsActionSetOptionInMemoryEnabled
      tags:
        - stats
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: Boolean
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: string
  /JSON/stats/action/setOptionStatsdPort/:
    get:
      description: >-
        Sets the Statsd service port
      operationId: statsActionSetOptionStatsdPort
      tags:
        - stats
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: Integer
        in: query
        required: true
        deprecated: false
        description: ""
        schema:
          type: integer
